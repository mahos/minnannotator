[{"/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/reportWebVitals.js":"1","/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/App.js":"2","/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/index.js":"3","/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/expertsDirectory/mapFilter.js":"4","/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/expertsDirectory/detailFilter.js":"5","/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/expertsDirectory/expertsDirectory.js":"6","/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/expertsDirectory/expertListing.js":"7","/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/expertsDirectory/random.js":"8"},{"size":362,"mtime":1606376489059,"results":"9","hashOfConfig":"10"},{"size":746,"mtime":1606627705467,"results":"11","hashOfConfig":"10"},{"size":500,"mtime":1606376882691,"results":"12","hashOfConfig":"10"},{"size":4921,"mtime":1606546738791,"results":"13","hashOfConfig":"10"},{"size":3741,"mtime":1606634826060,"results":"14","hashOfConfig":"10"},{"size":675,"mtime":1606635379776,"results":"15","hashOfConfig":"10"},{"size":4720,"mtime":1606700653845,"results":"16","hashOfConfig":"10"},{"size":866,"mtime":1606701375842,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"w37hw5",{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/reportWebVitals.js",[],"/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/App.js",["35","36"],"/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/index.js",[],"/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/expertsDirectory/mapFilter.js",[],"/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/expertsDirectory/detailFilter.js",["37"],"import React from 'react';\nimport './detailFilter.css';\n\nclass FilterForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            friendliness: [],\n            serviceType: [],\n            practiceArea: [],\n            source: []\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleReset = this.handleReset.bind(this);\n    }\n\n    handleSubmit() {\n        console.log('detail form submission happening');\n    }\n    handleReset() {\n        console.log('resetting detail form...');\n    }\n    render () {\n        const checkFields = {\n            friendliness: {\n                'Community reviewed': false,\n                'Has website' : false,\n                'Multi-lingual': false,\n                'More than 50 upvotes': false,\n                'Offers free consultation': false,\n                'Translator available': false,\n                'Online consultation available': false\n            },\n            serviceType: {\n                'Attorney': false,\n                'Judicial Scrivener' : false,\n                'Patent Agent': false,\n                'Administrative Scrivener': false\n            },\n            practiceArea: {\n                'Arbitration and Mediation': false,\n                'Asset Finance Law': false,\n                'Banking and Finance': false,\n                'Capital Markets': false,\n                'Constructions Law': false,\n                'Corportate Compliance': false,\n                'Criminal Defense': false,\n                'Entertainment Law': false,\n                'Insurance Law': false,\n                'Intellectual Property': false,\n                'International Arbitration': false,\n                'International Business': false,\n                'Labor and Employment': false,\n                'Litigation': false,\n                'Private Equity and Funds': false,\n                'Real Estate': false,\n                'Technology': false,\n                'Venture Capital Law': false\n            },\n            source:  {\n                'sumline.jp': false,\n                'HG.org': false,\n                'bengoshikai.jp/himawari search': false,\n                'legal.coconala.com': false\n            }\n        }\n        const checkFields2 = [\n            'test', 'test2', 'test3'\n        ]\n        return (\n            <div className=\"detail-form\">\n                <div className=\"form-action-buttons\">\n                    <button onClick={this.handleSubmit} className=\"primary\">Apply Filter</button>\n                    <button onClick={this.handleReset} className=\"secondary\">Reset Filter</button>\n                </div>\n                <div className=\"checkbox-area\">\n                    {Object.entries(checkFields).map(item => {\n                        console.log('item: ', item);\n                        return (\n                        <div className=\"checkgroup\">\n                            <h4>{item[0]}</h4>\n                            <ul className=\"checklist\">\n                                {Object.entries(item[1]).map(checkfield => {\n                                   return  (\n                                    <div>\n                                        <input type=\"checkbox\" name={checkfield[0]} value={checkfield[0]} defaultChecked={checkfield[1]}/>\n                                        <label>{checkfield[0]}</label>\n                                    </div>\n                                    )\n                                })}\n                            </ul>\n                        </div>\n                        )\n                    })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default FilterForm","/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/expertsDirectory/expertsDirectory.js",[],"/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/expertsDirectory/expertListing.js",["38","39","40"],"/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/expertsDirectory/random.js",[],{"ruleId":"41","severity":1,"message":"42","line":2,"column":8,"nodeType":"43","messageId":"44","endLine":2,"endColumn":12},{"ruleId":"41","severity":1,"message":"45","line":4,"column":8,"nodeType":"43","messageId":"44","endLine":4,"endColumn":17},{"ruleId":"41","severity":1,"message":"46","line":67,"column":15,"nodeType":"43","messageId":"44","endLine":67,"endColumn":27},{"ruleId":"47","severity":1,"message":"48","line":57,"column":37,"nodeType":"49","endLine":57,"endColumn":90},{"ruleId":"47","severity":1,"message":"48","line":58,"column":37,"nodeType":"49","endLine":58,"endColumn":89},{"ruleId":"47","severity":1,"message":"48","line":59,"column":37,"nodeType":"49","endLine":59,"endColumn":89},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'MapFilter' is defined but never used.","'checkFields2' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]