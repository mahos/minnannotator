[{"/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/reportWebVitals.js":"1","/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/App.js":"2","/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/index.js":"3","/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/expertsDirectory/mapFilter.js":"4","/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/expertsDirectory/detailFilter.js":"5","/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/expertsDirectory/expertsDirectory.js":"6","/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/expertsDirectory/expertListing.js":"7","/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/expertsDirectory/random.js":"8","/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/homeContent/homeContent.js":"9"},{"size":362,"mtime":1606376489059,"results":"10","hashOfConfig":"11"},{"size":1433,"mtime":1606842750143,"results":"12","hashOfConfig":"11"},{"size":500,"mtime":1606376882691,"results":"13","hashOfConfig":"11"},{"size":4921,"mtime":1606546738791,"results":"14","hashOfConfig":"11"},{"size":3779,"mtime":1606726867335,"results":"15","hashOfConfig":"11"},{"size":675,"mtime":1606635379776,"results":"16","hashOfConfig":"11"},{"size":13338,"mtime":1606788559071,"results":"17","hashOfConfig":"11"},{"size":954,"mtime":1606703945768,"results":"18","hashOfConfig":"11"},{"size":13554,"mtime":1606855960763,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"w37hw5",{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},"/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/reportWebVitals.js",[],"/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/App.js",["39","40"],"/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/index.js",[],"/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/expertsDirectory/mapFilter.js",[],"/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/expertsDirectory/detailFilter.js",["41"],"/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/expertsDirectory/expertsDirectory.js",[],"/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/expertsDirectory/expertListing.js",["42","43","44","45","46"],"/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/expertsDirectory/random.js",[],"/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/homeContent/homeContent.js",["47","48","49","50","51","52","53","54"],"import React from 'react';\nimport './homeContent.css';\n\nimport placeholderImage from '../images/image-placeholder.png';\nimport { ReactComponent as CaretDown} from '../images/icons/caret-down.svg';\nimport { ReactComponent as CaretUp} from '../images/icons/caret-up.svg';\nimport { ReactComponent as VoteIcon} from '../images/icons/vote-counter.svg';\nimport { ReactComponent as DictionaryIcon} from '../images/icons/dictionary.svg';\nimport { ReactComponent as BookmarkIcon} from '../images/icons/bookmark.svg';\nimport { ReactComponent as CommentIcon} from '../images/icons/comment.svg';\nimport { ReactComponent as CommentsIcon} from '../images/icons/comments.svg';\nimport { ReactComponent as AnnotateIcon} from '../images/icons/annotate.svg';\nimport { ReactComponent as LangToggleIcon} from '../images/icons/lang-toggle.svg';\n\n\nconst langFlagData = require('../expertsDirectory/langFlagByCode.json');\nconst resourceData = require('./resources.json');\nconst forumTopicData = require('./forumTopic.json');\nconst keywordsData = require('./keywords.json');\nconst experts = require('../expertsDirectory/experts.json');\n\nconst annotated = experts[experts.length - 1]; // needs to actually check if annotation exists and compare the time of last user annotation\n\nfunction convertMilliSec(ms) {\n    var yr, mo, d, h, m, s;\n    s = Math.floor(ms / 1000);\n    m = Math.floor(s / 60);\n    h = Math.floor(m / 60);\n    d = Math.floor(h / 24);\n    mo = Math.floor(d / 30);\n    yr = Math.floor(mo / 12);\n  \n  \n    var result = yr > 0 ? yr + ' years': mo > 0 ? mo + ' months': d > 0? d + ' days': h > 0 ? h + ' hr': m > 0 ? m + ' min': s + ' sec';\n    return result;\n};\n\nclass ToggleLang extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            lang: this.props.lang,\n            showAll: true\n        }\n    }\n    render() {\n        return (\n            <div className=\"toggler\">\n                <label>ALL</label>\n                <div className=\"outside\">\n                    <div className=\"inside\"></div>\n                </div>\n                <label>{langFlagData[this.state.lang]['flagEmoji']?langFlagData[this.state.lang]['flag']: ''}{this.state.lang.toUpperCase()}</label>\n\n            </div>\n        )\n    }\n    \n}\n\nclass HomeContent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            lang: \"en\"\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"landing-contents\">\n                <div className=\"hero-area\">\n                    <div className=\"hero-cta\">\n                        <h2>Needing some legal protection in Japan?<br />\n                        Join our community, get help, then use your \n                        experience to help others find the right legal support.</h2>\n                        <button className=\"primary\">Sign Up</button>\n                        <a href=\"\"><p>Read more about how the site works</p></a>\n                    </div>\n                    <div className=\"hero-image-container\">\n                        <img src={placeholderImage} />\n                    </div>\n                </div>\n                <div className=\"ranking-panels-area\">\n                    <div className=\"top-resource-panel panel\">\n                        <div className=\"panel-head\">\n                            <h2 className=\"panel-title\">Top Resources</h2>\n                            <ToggleLang className=\"toggler\" lang=\"en\"/>\n                        </div>\n                        <div className=\"resource-list\">\n                            {resourceData.slice(0,3).map((resource, index) => {\n                                return (<div className=\"resource-card\">\n                                    <div className=\"card-image-container\">\n                                        <img src={placeholderImage} />\n                                    </div>\n                                    <div className=\"resource-info\">\n                                        <h3><div>{index + 1}</div>{resource['website']}</h3>\n                                        <div className=\"topic-tags\">\n                                            {resource['tags'].map(tag => {\n                                                return (<div className=\"small-tag\">{tag}</div>)\n                                            })}\n                                        </div>\n                                    </div>\n                                    <div className=\"votes-zone\">\n                                        <CaretUp className=\"caret-up control\"/>\n                                        <div className=\"vote-count\">{resource['allVotes']}</div>\n                                        <figcaption className=\"tiny-caption\">votes</figcaption>\n                                        <CaretDown className=\"caret-down control\"/>\n                                    </div>\n                                </div>)\n                            })}\n                        </div>\n                        <a className=\"more-link\" href=\"#\">More</a>\n                    </div>\n                    <div className=\"forum-topic-panel panel\">\n                        <div className=\"panel-head\">\n                            <h2 className=\"panel-title\">Hot Forum Topic</h2>\n                        </div>\n                        <div className=\"topic-list\">\n                            {forumTopicData.slice(0,3).map((topic, index) => {\n                                return (<div className=\"topic-card\">\n                                    <div className=\"topic-rank\">{index + 1}</div>\n                                    <div className=\"topic-info\">\n                                        <h3>{topic['title']}</h3>\n                                        <h6>Posted by {topic['opener']} {convertMilliSec(new Date() - new Date(topic['timestamp']))} ago</h6>\n                                    </div>\n                                    <div className=\"interest-zone\">\n                                        <div className=\"bookmarks\">\n                                            <BookmarkIcon className=\"bookmark-icon icon\"/>\n                                            <div class=\"interest-stat\">\n                                                <div className=\"bookmark-count count\">{topic['bookmarks']}</div>\n                                                <figcaption className=\"tiny-caption\">Bookmarked</figcaption>\n                                            </div>\n                                        </div>\n                                        <div className=\"comments\">\n                                            <CommentsIcon className=\"comments-icon icon\"/>\n                                            <div class=\"interest-stat\">\n                                                <div className=\"comment-count count\">{topic['comments']}</div>\n                                                <figcaption className=\"tiny-caption\">Comments</figcaption>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>)\n                            })}\n                        </div>\n                        <a href=\"#\">More</a>\n                    </div>\n                    <div className=\"recently-annotated-panel panel\">\n                        <h2 className=\"panel-title\">Recently Annotated</h2>\n                        <div className=\"annotated-card\">\n                            <div className=\"card-image-container\">\n                                <img src={placeholderImage} />\n                            </div>\n                            <div className=\"basic-info\">\n                                <h3>{annotated['website']}</h3>\n                                <div className=\"practice-tags\">\n                                    {annotated['tags'].map(tag => {\n                                        return (<div className=\"tag\">{tag}</div>)\n                                    })}\n                                </div>\n                                <h6>Annotation by {annotated['annotation-info']['annotators'][annotated['annotation-info']['annotators'].length - 1][0]} {langFlagData[annotated['annotation-info']['annotators'][annotated['annotation-info']['annotators'].length - 1][2]]['flagEmoji'] ? langFlagData[annotated['annotation-info']['annotators'][annotated['annotation-info']['annotators'].length - 1][2]]['flag'] : ''}</h6>\n                            </div>\n                            <div className=\"annotation-lang\">\n                                <h6>Annotation in</h6>\n                                {annotated['annotation-info']['annotation-lang'].slice(0,3).map(lang => {\n                                    if (langFlagData[lang]['flagEmoji']) {\n                                        return <div>{langFlagData[lang]['flag']}</div>\n                                    } else {\n                                        return <div>{lang}</div>\n                                    }\n                                    \n                                })}\n                            </div>\n                        </div>\n                        <a href=\"#\">More</a>\n                    </div>\n                    <div className=\"popular-keywords-panel panel\">\n                        <div className=\"panel-head\">\n                            <h2 className=\"panel-title\">Popular Keywords</h2>\n                            <ToggleLang lang=\"en\"/>\n                        </div>\n                        <div className=\"keywords\">\n                        {keywordsData.slice(0,3).map(word => {\n                            console.log('Word: ', word);\n                            return (<div className=\"word-zone\">\n                                <h6 className=\"rubi\">{word['rubi']}</h6>\n                                <h3>{word['japanese']}</h3>\n                                <h4>{word['pronunciation']}</h4>\n                                <div className=\"add-dict-cta\">\n                                    <div className=\"add-icon\">+</div>\n                                    <h6>add to my <br/>dictionary</h6>\n                                </div>\n                                <div className=\"translate-tooltip\">\n                                    {word['translations'][this.state.lang].map(definition => {\n                                        return (\n                                            <div className=\"each-def\">\n                                                <div className=\"votes-zone\">\n                                                    <CaretUp className=\"caret-up control\"/>\n                                                    <div className=\"vote-count\">{definition['votes']}</div>\n                                                    <figcaption className=\"tiny-caption\">votes</figcaption>\n                                                    <CaretDown className=\"caret-down control\"/>\n                                                </div>\n                                                <p>{definition['meaning']}</p>\n                                            </div>\n                                        )\n                                    })}\n                                </div>\n                            </div>)\n                        })}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"things-to-do-list\">\n                    <h3>On Minnannotator, you can</h3>\n                    <div className=\"row\">\n                        <div className=\"guide-panel-area\">\n                            <div className=\"each-panel\">\n                                <VoteIcon className=\"panel-icon\"/>\n                                <h4>Vote on resource usefulness</h4>\n                            </div>\n                            <div className=\"each-panel\">\n                                <LangToggleIcon className=\"panel-icon\"/>\n                                <h4>Browse in your first language</h4>\n                            </div>\n                            <div className=\"each-panel\">\n                                <BookmarkIcon className=\"panel-icon\"/>\n                                <h4>Bookmark legal resources and lawyers for future reference</h4>\n                            </div>\n                            <div className=\"each-panel\">\n                                <AnnotateIcon className=\"panel-icon\"/>\n                                <h4>Review websites by adding annotation and help your community navigate through legal websites smoothly</h4>\n                            </div>\n                            <div className=\"each-panel\">\n                                <DictionaryIcon className=\"panel-icon\"/>\n                                <h4>Learn legal terminologies in Japanese and add more for the community</h4>\n                            </div>\n                            <div className=\"each-panel\">\n                                <CommentIcon className=\"panel-icon\"/>\n                                <h4>Ask the community, share your experiences</h4>\n                            </div>\n                        </div>\n                        <div className=\"sponsor\">\n                            <p>Sponsored Advertisement</p>\n                            <img src={placeholderImage} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default HomeContent",{"ruleId":"55","severity":1,"message":"56","line":4,"column":8,"nodeType":"57","messageId":"58","endLine":4,"endColumn":24},{"ruleId":"59","severity":1,"message":"60","line":18,"column":11,"nodeType":"61","endLine":18,"endColumn":23},{"ruleId":"55","severity":1,"message":"62","line":67,"column":15,"nodeType":"57","messageId":"58","endLine":67,"endColumn":27},{"ruleId":"63","severity":1,"message":"64","line":110,"column":61,"nodeType":"61","endLine":110,"endColumn":204},{"ruleId":"63","severity":1,"message":"64","line":138,"column":65,"nodeType":"61","endLine":138,"endColumn":209},{"ruleId":"63","severity":1,"message":"64","line":164,"column":65,"nodeType":"61","endLine":164,"endColumn":205},{"ruleId":"63","severity":1,"message":"64","line":180,"column":215,"nodeType":"61","endLine":180,"endColumn":305},{"ruleId":"59","severity":1,"message":"60","line":186,"column":37,"nodeType":"61","endLine":186,"endColumn":78},{"ruleId":"59","severity":1,"message":"60","line":78,"column":25,"nodeType":"61","endLine":78,"endColumn":36},{"ruleId":"63","severity":1,"message":"64","line":81,"column":25,"nodeType":"61","endLine":81,"endColumn":55},{"ruleId":"63","severity":1,"message":"64","line":94,"column":41,"nodeType":"61","endLine":94,"endColumn":71},{"ruleId":"59","severity":1,"message":"60","line":113,"column":25,"nodeType":"61","endLine":113,"endColumn":59},{"ruleId":"59","severity":1,"message":"60","line":146,"column":25,"nodeType":"61","endLine":146,"endColumn":37},{"ruleId":"63","severity":1,"message":"64","line":152,"column":33,"nodeType":"61","endLine":152,"endColumn":63},{"ruleId":"59","severity":1,"message":"60","line":175,"column":25,"nodeType":"61","endLine":175,"endColumn":37},{"ruleId":"63","severity":1,"message":"64","line":244,"column":29,"nodeType":"61","endLine":244,"endColumn":59},"no-unused-vars","'ExpertsDirectory' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'checkFields2' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images."]