[{"/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/routes/index.js":"1","/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/expertsDirectory/expertListing.js":"2","/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/expertsDirectory/mapFilter.js":"3","/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/expertsDirectory/detailFilter.js":"4","/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/expertsDirectory/expertsDirectory.js":"5","/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/expertDetail/expertDetail.js":"6","/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/App.js":"7","/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/homeContent/homeContent.js":"8","/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/routes/Route.js":"9","/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/reportWebVitals.js":"10","/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/utilities/history.js":"11","/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/index.js":"12","/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/utilities/dashboard.js":"13"},{"size":1274,"mtime":1607452052312,"results":"14","hashOfConfig":"15"},{"size":29150,"mtime":1607451220286,"results":"16","hashOfConfig":"15"},{"size":5250,"mtime":1607469762730,"results":"17","hashOfConfig":"15"},{"size":12152,"mtime":1607449496252,"results":"18","hashOfConfig":"15"},{"size":1763,"mtime":1607451637384,"results":"19","hashOfConfig":"15"},{"size":23648,"mtime":1607470598458,"results":"20","hashOfConfig":"15"},{"size":2001,"mtime":1607451992532,"results":"21","hashOfConfig":"15"},{"size":14064,"mtime":1607074983114,"results":"22","hashOfConfig":"15"},{"size":997,"mtime":1607074983138,"results":"23","hashOfConfig":"15"},{"size":362,"mtime":1606376489059,"results":"24","hashOfConfig":"15"},{"size":113,"mtime":1607074983139,"results":"25","hashOfConfig":"15"},{"size":873,"mtime":1607127732881,"results":"26","hashOfConfig":"15"},{"size":326,"mtime":1607074983139,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"w37hw5",{"filePath":"30","messages":"31","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/routes/index.js",[],"/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/expertsDirectory/expertListing.js",["56","57","58","59","60","61","62","63","64","65","66"],"import React from 'react';\nimport './expertListing.css';\nimport _ from 'lodash';\n\nimport placeholderImage from '../images/image-placeholder.png';\nimport { ReactComponent as CaretDown} from '../images/icons/caret-down.svg';\nimport { ReactComponent as CommunityChecked} from '../images/icons/check-circle.svg';\nimport { ReactComponent as InternetIcon} from '../images/icons/www.svg';\n\n// import languages from './random'\nconst expertsData_old = require('./experts.json');\nconst expertsData = require('./fakeExperts.json');\nconst langFlagData = require('./langFlagByCode.json')\n// const icons = require('../images/icons/caret-down.svg');\n\n\nconsole.log('expertsData: ', expertsData);\nlet orderedData = _.sortBy(expertsData, ['votes']).reverse();\nconsole.log('orderedData: ', orderedData)\n\nconsole.log('languages and flag data: ', langFlagData)\n\nlet filteredData = [];\n\n\nclass ExpertListContent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            orderedDataState: [],\n            flagHover: false,\n            flagHoverDict: {},\n            hoverLang: ''\n        };\n        this.sortData = this.sortData.bind(this);\n    }\n    narrowData(region, options) {\n        filteredData = [];\n        console.log('narrowing down region data - ', region)\n        console.log('options.length: ', Object.entries(options).length)\n        if (region == 'All Regions' && Object.entries(options).length === 0) {\n            filteredData = orderedData;\n            return;\n        } else if (region == \"All Regions\" && Object.entries(options).length) {\n            console.log('all regions, restricted options')\n            orderedData.forEach(data => {\n                \n                let reqTracker = [];\n                Object.entries(options).forEach(reqOption => {\n                    // console.log('going around options: ', reqOption);\n                    if (reqOption[0] === \"general\") {\n                        reqOption[1].forEach(generalReq => {\n                            switch(generalReq) {\n                                case \"Community reviewed\":\n                                    data[\"reviewed\"] ? reqTracker.push(true) : reqTracker.push(false);\n                                    break;\n                                case \"Has website\":\n                                    data[\"website\"] && data[\"website\"] !== '' ? reqTracker.push(true) : reqTracker.push(false);\n                                    break;\n                                case \"Multi-lingual\":\n                                    data[\"languages\"].length > 1 ? reqTracker.push(true) : reqTracker.push(false);\n                                    break;\n                                case \"More than 50 upvotes\":\n                                    data[\"votes\"] > 49 ? reqTracker.push(true) : reqTracker.push(false);\n                                    break;\n                                case \"Offers free consultation\":\n                                    data[\"tags\"].includes(\"free consultation\") ? reqTracker.push(true) : reqTracker.push(false);\n                                    break;\n                                case \"Translator available\":\n                                    data[\"tags\"].includes(\"translator available\") ? reqTracker.push(true) : reqTracker.push(false);\n                                    break;\n                                case \"Online consultation available\":\n                                    data[\"tags\"].includes(\"online consultation\") ? reqTracker.push(true) : reqTracker.push(false);\n                                    break;\n                            }\n                            \n                        })\n                    } else {\n                        let includesAll = []\n                        console.log('reqOption[1]', reqOption[1])\n                        reqOption[1].forEach(item => {\n                            console.log('item: ', item);\n                            console.log('data[reqOption[0]]: ', data[reqOption[0]])\n                            data[reqOption[0]].includes(item) ? includesAll.push(true) : includesAll.push(false)\n                        })\n                        console.log('includesAll: ', includesAll)\n                        if (includesAll.every(i => i)) {\n                            console.log('cleared', reqOption[0], ' requirements of ', reqOption[1])\n                        } else {\n                            console.log('did not pass ', reqOption[0], ' req of ', reqOption[1])\n                        }\n                        reqTracker.push(includesAll.every(i => i))\n                        \n                    }\n\n                })\n                console.log('reqTracker: ', reqTracker)\n                if (reqTracker && reqTracker.every(i => i)) {\n                    console.log('business passes requirement of filter - adding to list...')\n                    filteredData.push(data);\n                }\n                \n            })\n            return;\n        } else if (region !== 'All Regions' && Object.entries(options).length === 0) {\n            console.log('restricted regions, no options');\n            orderedData.forEach(data => {\n                // console.log('data: ', data)\n                if (data['locations'].includes(region)) {\n                    filteredData.push(data);\n                } \n            })\n            return;\n        } else {\n            console.log('restricted regions, restricted options')\n            orderedData.forEach(data => {\n                let reqTracker = [];\n                // console.log('data: ', data)\n                if (data['locations'].includes(region)) {\n                    reqTracker.push(true);\n                } else {\n                    reqTracker.push(false);\n                }\n                \n                Object.entries(options).forEach(reqOption => {\n                    // console.log('going around options: ', reqOption);\n                    if (reqOption[0] === \"general\") {\n                        reqOption[1].forEach(generalReq => {\n                            switch(generalReq) {\n                                case \"Community reviewed\":\n                                    data[\"reviewed\"] ? reqTracker.push(true) : reqTracker.push(false);\n                                    break;\n                                case \"Has website\":\n                                    data[\"website\"] && data[\"website\"] !== '' ? reqTracker.push(true) : reqTracker.push(false);\n                                    break;\n                                case \"Multi-lingual\":\n                                    data[\"languages\"].length > 1 ? reqTracker.push(true) : reqTracker.push(false);\n                                    break;\n                                case \"More than 50 upvotes\":\n                                    data[\"votes\"] > 49 ? reqTracker.push(true) : reqTracker.push(false);\n                                    break;\n                                case \"Offers free consultation\":\n                                    data[\"tags\"].includes(\"free consultation\") ? reqTracker.push(true) : reqTracker.push(false);\n                                    break;\n                                case \"Translator available\":\n                                    data[\"tags\"].includes(\"translator available\") ? reqTracker.push(true) : reqTracker.push(false);\n                                    break;\n                                case \"Online consultation available\":\n                                    data[\"tags\"].includes(\"online consultation\") ? reqTracker.push(true) : reqTracker.push(false);\n                                    break;\n                            }\n                            \n                        })\n                    } else {\n                        let includesAll = []\n                        console.log('reqOption[1]', reqOption[1])\n                        reqOption[1].forEach(item => {\n                            console.log('item: ', item);\n                            console.log('data[reqOption[0]]: ', data[reqOption[0]])\n                            data[reqOption[0]].includes(item) ? includesAll.push(true) : includesAll.push(false)\n                        })\n                        console.log('includesAll: ', includesAll)\n                        if (includesAll.every(i => i)) {\n                            // console.log('cleared', reqOption[0], ' requirements of ', reqOption[1])\n                        } else {\n                            // console.log('did not pass ', reqOption[0], ' req of ', reqOption[1])\n                        }\n                        reqTracker.push(includesAll.every(i => i))\n                        \n                    }\n\n                })\n                // console.log('reqTracker: ', reqTracker)\n                if (reqTracker && reqTracker.every(i => i)) {\n                    // console.log('business passes requirement of filter - adding to list...')\n                    filteredData.push(data);\n                }\n                \n            })\n        }\n        \n    }\n\n    handleFlagMouseEnter(lang) {\n        console.log('flag mouseover activated!');\n        console.log('this: ', this)\n        console.log('lang in: ', lang)\n        this.setState({[`flagHoverDict${lang}`]: true,\n                        'hoverLang': lang});\n    }\n    handleFlagMouseExit(lang) {\n        console.log('flag mouse out activated!');\n        console.log('lang out: ', lang)\n        this.setState({flagHover: false, 'hoverLang': ''});\n    }\n\n    sortData(event) {\n        console.log('sorting data - ', event.target.value)\n        if (event.target.value === 'A-Z') {\n            let reOrdered =  _.sortBy(expertsData, ['name', 'votes']);\n            console.log('reOrderd1: ', reOrdered);\n            this.setState({orderedDataState: reOrdered});\n            // this.setState({testState: 'testing'});\n            orderedData = reOrdered;\n        } else if (event.target.value === 'Z-A') {\n            let reOrdered = _.sortBy(expertsData, ['name', 'votes']).reverse();\n            this.setState({orderedDataState: reOrdered});\n            console.log('reOrderd2: ', reOrdered);\n            orderedData = reOrdered;\n        } else {\n            let reOrdered = _.sortBy(expertsData, ['votes', 'name']).reverse();\n            this.setState({orderedDataState: reOrdered})\n            console.log('reOrderd3: ', reOrdered);\n            orderedData = reOrdered;\n        }\n    }\n\n    render() {\n        this.narrowData(this.props.region, this.props.options)\n  \n        return (\n            <div className=\"filter-result-content\">\n                <div className=\"result-stat-area\">\n                    <label className=\"result-count\">{filteredData.length} results</label>\n                    <div className=\"sorter\">\n                        <label>Sort by: \n                            <select onChange={(event)=>this.sortData(event)}>\n                                <option value=\"votes\">Votes</option>\n                                <option value=\"A-Z\">Alphabetical (A-Z)</option>\n                                <option value=\"Z-A\">Alphabetical (Z-A)</option>\n                            </select>\n                        </label>\n                    </div>\n                </div>\n                <div className=\"result-listing-area\">\n                    {filteredData.slice(0,8).map(expert => {\n                        return (\n                            <div className=\"expert-card\">\n                                <div className=\"votes-zone\">\n                                    <svg className=\"caret-up\" height=\"11.859\" viewBox=\"0 0 20.911 11.859\" width=\"20.911\"><path d=\"m20.3 24.75h-18.1a1.406 1.406 0 0 1 -.994-2.4l9.05-9.05a1.406 1.406 0 0 1 1.989 0l9.047 9.047a1.406 1.406 0 0 1 -.992 2.403z\" fill=\"#6e6e6e\" opacity=\".278\" transform=\"translate(-.794 -12.891)\"/></svg>\n                                    <div className=\"vote-count\">{expert['votes']}</div>\n                                    <figcaption className=\"tiny-caption\">votes</figcaption>\n                                    <CaretDown className=\"caret-down\"/>\n                                    {/* <svg className=\"caret-down\" width=\"20.911\" height=\"11.859\" viewBox=\"0 0 20.911 11.859\"><path d=\"M20.3,12.891H2.2a1.406,1.406,0,0,0-.994,2.4l9.047,9.047a1.406,1.406,0,0,0,1.989,0l9.047-9.047A1.406,1.406,0,0,0,20.3,12.891Z\" fill=\"#6e6e6e\" opacity=\".278\" transform=\"translate(-0.794 -12.891)\"/></svg> */}\n                                </div>\n                                <div className=\"images-zone\">\n                                    <img className=\"main-image\" alt={\"image of \" + expert['name']} src={expert['images'][0] ?`${process.env.PUBLIC_URL}/mockData/${expert['id']}/${expert['images'][1]}` : placeholderImage} />\n                                    <div>\n                                        <img className=\"sub-image\" alt={\"image of \" + expert['name']} src={expert['images'][1] ?`${process.env.PUBLIC_URL}/mockData/${expert['id']}/${expert['images'][0]}` : placeholderImage} />\n                                        <img className=\"sub-image\"  alt={\"image of \" + expert['name']} src={expert['images'][2] ?`${process.env.PUBLIC_URL}/mockData/${expert['id']}/${expert['images'][2]}` : placeholderImage} />\n                                    </div>\n                                </div>\n                                <div className=\"details-zone\">\n                                    <div className=\"business-title\">\n                                        <h2>{expert['name']}</h2>{expert['reviewed']?<CommunityChecked className=\"community-badge\" />: null}\n                                    </div>\n                                    <div className=\"tags\">\n                                        {expert['tags'].map(tagItem => {\n                                            return <div className=\"tag-badge\">{tagItem}</div>\n                                        })}\n                                    </div>\n                                    <div className=\"locations\">\n                                        <h6>Locations</h6>\n                                        <div className=\"location-list\">\n                                        {expert['locations'].map(location => {\n                                            return <div className=\"location\">{location}</div>\n                                        })}\n                                        </div>\n                                    </div>\n                                    <div className=\"website\">\n                                        { expert['website'].length > 0 ?\n                                        <div><InternetIcon /><span><a>{expert['website']}</a></span></div> \n                                        : <h6>No website available</h6> }\n                                    </div>\n                                    { expert['website'].length > 0 ?\n                                        <div className=\"website-languages\">\n                                            <h6>Website in</h6>\n                                            <div className=\"flag-list\">{\n                                                expert['website-lang'].map(weblang => {\n                                                    if (langFlagData[weblang]['flagEmoji']){\n                                                        return (\n                                                            <div className=\"flag-icon\">\n                                                                <p onMouseOver={()=>this.handleFlagMouseEnter(langFlagData[weblang]['langName'])} onMouseOut={()=>this.handleFlagMouseExit(langFlagData[weblang]['langName'])}>{langFlagData[weblang]['flag']}</p>\n                                                                {langFlagData[weblang]['langName']===this.state.hoverLang ? \n                                                                        <figcaption style={{display: 'block', 'z-index': '900'}} className=\"subcaption\">{langFlagData[weblang]['langName']}</figcaption>\n                                                                    :   <figcaption style={{display: 'none'}} className=\"subcaption\">{langFlagData[weblang]['langName']}</figcaption>}\n                                                            </div>\n                                                            \n                                                        )\n                                                    } else {\n                                                        return (\n                                                            <div className=\"flag-icon\">\n                                                                <img onMouseOver={()=>this.handleFlagMouseEnter(langFlagData[weblang]['langName'])} onMouseOut={()=>this.handleFlagMouseExit(langFlagData[weblang]['langName'])} src={langFlagData[weblang]['flag']} />\n                                                                {langFlagData[weblang]['langName']===this.state.hoverLang ? \n                                                                        <figcaption style={{display: 'block', 'z-index': '900'}} className=\"subcaption\">{langFlagData[weblang]['langName']}</figcaption>\n                                                                    :   <figcaption style={{display: 'none'}} className=\"subcaption\">{langFlagData[weblang]['langName']}</figcaption>}\n                                                                \n                                                            </div>\n                                                            \n                                                        )\n                                                    }\n                                                    \n                                                })\n                                            }\n                                            </div>\n                                        </div>\n                                    : <div><br /><br /></div> }\n                                    {expert['annotation-info']['history'].length > 0 ? \n                                    <div>\n                                        <div className=\"annotation-languages\">\n                                            <h6>Review annotation available in</h6>\n                                            <div className=\"flag-list\"> \n                                                {\n                                                    expert['annotation-info']['annotation-lang'].slice(0,3).map(annolang => {\n                                                        if (langFlagData[annolang]['flagEmoji']){\n                                                            return (\n                                                                <div className=\"flag-icon\">\n                                                                    <p onMouseOver={()=>this.handleFlagMouseEnter(langFlagData[annolang]['langName'])} onMouseOut={()=>this.handleFlagMouseExit(langFlagData[annolang]['langName'])}>{langFlagData[annolang]['flag']}</p>\n                                                                    {langFlagData[annolang]['langName']===this.state.hoverLang ? \n                                                                        <figcaption style={{display: 'block', 'z-index': '900'}} className=\"subcaption\">{langFlagData[annolang]['langName']}</figcaption>\n                                                                    :   <figcaption style={{display: 'none'}} className=\"subcaption\">{langFlagData[annolang]['langName']}</figcaption>}\n                                                                </div>\n                                                                \n                                                            )\n                                                        } else {\n                                                            return (\n                                                                <div className=\"flag-icon\">\n                                                                    <img onMouseOver={()=>this.handleFlagMouseEnter(langFlagData[annolang]['langName'])} onMouseOut={()=>this.handleFlagMouseExit(langFlagData[annolang]['langName'])} src={langFlagData[annolang]['flag']} />\n                                                                    {langFlagData[annolang]['langName']===this.state.hoverLang ? \n                                                                        <figcaption style={{display: 'block', 'z-index': '900'}} className=\"subcaption\">{langFlagData[annolang]['langName']}</figcaption>\n                                                                    :   <figcaption style={{display: 'none'}} className=\"subcaption\">{langFlagData[annolang]['langName']}</figcaption>}\n                                                                    \n                                                                </div>\n                                                                \n                                                            )\n                                                        }\n                                                        \n                                                    })\n                                                }\n                                                {expert['annotation-info']['annotation-lang'].length > 3 ? \n                                                <div>\n                                                    <p className=\"remainder-lang\">+{expert['annotation-info']['annotation-lang'].length - 3}</p> \n                                                    <div className=\"other-flags\">{expert['annotation-info']['annotation-lang'].slice(3).map(rest => {\n                                                    \n                                                        if (langFlagData[rest]['flagEmoji']){\n                                                            return (\n                                                                <div className=\"flag-icon small\">\n                                                                    <p onMouseOver={()=>this.handleFlagMouseEnter(langFlagData[rest]['langName'])} onMouseOut={()=>this.handleFlagMouseExit(langFlagData[rest]['langName'])}>{langFlagData[rest]['flag']}</p>\n                                                                    {langFlagData[rest]['langName']===this.state.hoverLang ? \n                                                                        <figcaption style={{display: 'block', 'z-index': '900'}} className=\"subcaption\">{langFlagData[rest]['langName']}</figcaption>\n                                                                    :   <figcaption style={{display: 'none'}} className=\"subcaption\">{langFlagData[rest]['langName']}</figcaption>}\n                                                                </div>\n                                                                \n                                                            )\n                                                        } else {\n                                                            return (\n                                                                <div className=\"flag-icon small\">\n                                                                    <img onMouseOver={()=>this.handleFlagMouseEnter(langFlagData[rest]['langName'])} onMouseOut={()=>this.handleFlagMouseExit(langFlagData[rest]['langName'])} src={langFlagData[rest]['flag']} />\n                                                                    {langFlagData[rest]['langName']===this.state.hoverLang ? \n                                                                        <figcaption style={{display: 'block', 'z-index': '900'}} className=\"subcaption\">{langFlagData[rest]['langName']}</figcaption>\n                                                                    :   <figcaption style={{display: 'none'}} className=\"subcaption\">{langFlagData[rest]['langName']}</figcaption>}\n                                                                    \n                                                                </div>\n                                                                \n                                                            )\n                                                        }\n                                                        \n                                                    })}</div>\n                                                </div>\n                                                : null}\n                                            </div>\n                                        </div>\n                                        <div className=\"annotator-info\">\n                                            <div className=\"user-info\">\n                                                <h6>Last annotated by {expert['annotation-info']['annotators'].slice(-1)[0][0]}</h6> {/* each annotator [\"User Z\", \"2020-11-03T19:09:22GMT\", \"en\"] */}\n                                                <span>{langFlagData[expert['annotation-info']['annotators'].slice(-1)[0][2]]['flagEmoji']? langFlagData[expert['annotation-info']['annotators'].slice(-1)[0][2]]['flag']: <img src={langFlagData[expert['annotation-info']['annotators'].slice(-1)[0][2]]['flag']}/>}</span>\n                                            </div>\n                                            <h6>On {new Date(expert['annotation-info']['annotators'].slice(-1)[0][1]).toDateString()}</h6>\n                                        </div>\n                                    </div>\n                                    : <h6>No one has annotated this professional yet</h6>}\n                                </div>\n                                <div className=\"action-zone\">\n                                    <div className=\"expert-languages\">\n                                        <h6>Service available in</h6>\n                                        <div className=\"flag-list\">{\n                                            expert['languages'].map(explang => {\n                                                if (langFlagData[explang]['flagEmoji']){\n                                                    return (\n                                                        <div className=\"flag-icon\">\n                                                            <p onMouseOver={() => this.handleFlagMouseEnter(langFlagData[explang]['langName'])} onMouseOut={() => this.handleFlagMouseExit(langFlagData[explang]['langName'])}>{langFlagData[explang]['flag']}</p>\n                                                            {langFlagData[explang]['langName']===this.state.hoverLang ? \n                                                                <figcaption style={{display: 'block', 'z-index': '900'}} className=\"subcaption\">{langFlagData[explang]['langName']}</figcaption>\n                                                            :   <figcaption style={{display: 'none'}} className=\"subcaption\">{langFlagData[explang]['langName']}</figcaption>}\n                                                        </div>\n                                                        \n                                                    )\n                                                } else {\n                                                    return (\n                                                        <div className=\"flag-icon\">\n                                                            <img onMouseOver={() => this.handleFlagMouseEnter(langFlagData[explang]['langName'])} onMouseOut={() => this.handleFlagMouseExit(langFlagData[explang]['langName'])} src={langFlagData[explang]['flag']} />\n                                                            {langFlagData[explang]['langName']===this.state.hoverLang ? \n                                                                <figcaption style={{display: 'block', 'z-index': '900'}} className=\"subcaption\">{langFlagData[explang]['langName']}</figcaption>\n                                                            :   <figcaption style={{display: 'none'}} className=\"subcaption\">{langFlagData[explang]['langName']}</figcaption>}\n                                                            \n                                                        </div>\n                                                        \n                                                    )\n                                                }\n                                                \n                                            })\n                                        }\n                                        </div>\n                                    </div>\n                                    <a className=\"read-more-button\" href={'./detail/' + expert['id']}><button className=\"primary\">Go Read More</button></a>\n                                </div>\n                            </div>\n                        )\n                    })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ExpertListContent","/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/expertsDirectory/mapFilter.js",["67"],"/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/expertsDirectory/detailFilter.js",["68"],"import React from 'react';\nimport './detailFilter.css';\nimport _ from 'lodash';\n\nclass FilterForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleReset = this.handleReset.bind(this);\n        this.handleCheck = this.handleCheck.bind(this);\n        this.state = {\n            friendliness: [],\n            serviceType: [],\n            practiceArea: [],\n            source: [],\n            test1: {\n                'subtitle': true\n            },\n            test2: false,\n            test3: '',\n            checkFieldsState: {\n                'Non-Japanese Friendliness': {\n                    'Community reviewed': false,\n                    'Has website' : false,\n                    'Multi-lingual': false,\n                    'More than 50 upvotes': false,\n                    'Offers free consultation': false,\n                    'Translator available': false,\n                    'Online consultation available': false\n                },\n                'Legal Service / Type': {\n                    'Attorney': false,\n                    'Judicial Scrivener' : false,\n                    'Patent Agent': false,\n                    'Administrative Scrivener': false\n                },\n                'Practice Areas': {\n                    'Arbitration and Mediation': false,\n                    'Asset Finance Law': false,\n                    'Banking and Finance': false,\n                    'Capital Markets': false,\n                    'Constructions Law': false,\n                    'Corporate Compliance': false,\n                    'Criminal Defense': false,\n                    'Entertainment Law': false,\n                    'Insurance Law': false,\n                    'Intellectual Property': false,\n                    'International Arbitration': false,\n                    'International Business': false,\n                    'Labor and Employment': false,\n                    'Litigation': false,\n                    'Private Equity and Funds': false,\n                    'Real Estate': false,\n                    'Technology': false,\n                    'Venture Capital Law': false\n                },\n                'Result Source':  {\n                    'sumline.jp': false,\n                    'HG.org': false,\n                    'bengoshikai.jp': false,\n                    'legal.coconala.com': false\n                }\n            }\n        }\n        \n    }\n\n    handleSubmit(checks) {\n        let optionDict = {}\n        console.log('detail form submission happening - ', checks);\n        // this.setState({checkFieldsState: checks})\n        Object.entries(checks).forEach(type => {\n            // typeVal obj in type[1]\n            if (type[0] === \"Non-Japanese Friendliness\") {\n                let generalReq = []\n                Object.entries(type[1]).forEach(checkfield => {\n                    if (checkfield[1]) {\n                        generalReq.push(checkfield[0])\n                    }\n                })\n                if (generalReq.length) {\n                    optionDict[\"general\"] = generalReq;\n                } else {\n                    delete optionDict[\"general\"];\n                }\n            } else if (type[0] === \"Legal Service / Type\") {\n                let serviceReq = []\n                Object.entries(type[1]).forEach(checkfield => {\n                    if (checkfield[1]) {\n                        serviceReq.push(checkfield[0])\n                    }\n                })\n                if (serviceReq.length) {\n                    optionDict[\"service-type\"] = serviceReq;\n                } else {\n                    delete optionDict[\"service-type\"];\n                }\n            } else if (type[0] === \"Practice Areas\") {\n                let specialtyReq = []\n                Object.entries(type[1]).forEach(checkfield => {\n                    if (checkfield[1]) {\n                        specialtyReq.push(checkfield[0])\n                    }\n                })\n                if (specialtyReq.length) {\n                    optionDict[\"specialty\"] = specialtyReq;\n                } else {\n                    delete optionDict[\"specialty\"];\n                }\n            } else {\n                let sourceReq = []\n                Object.entries(type[1]).forEach(checkfield => {\n                    if (checkfield[1]) {\n                        sourceReq.push(checkfield[0])\n                    }\n                })\n                if (sourceReq.length) {\n                    optionDict[\"existsIn\"] = sourceReq;\n                } else {\n                    delete optionDict[\"existsIn\"];\n                }\n            }\n            \n        }) \n        console.log('optionDict: ', optionDict);\n    \n        this.props.onFilterApply(optionDict);\n    }\n    handleReset() {\n        console.log('resetting detail form...');\n        const cleared = {\n            'Non-Japanese Friendliness': {\n                'Community reviewed': false,\n                'Has website' : false,\n                'Multi-lingual': false,\n                'More than 50 upvotes': false,\n                'Offers free consultation': false,\n                'Translator available': false,\n                'Online consultation available': false\n            },\n            'Legal Service / Type': {\n                'Attorney': false,\n                'Judicial Scrivener' : false,\n                'Patent Agent': false,\n                'Administrative Scrivener': false\n            },\n            'Practice Areas': {\n                'Arbitration and Mediation': false,\n                'Asset Finance Law': false,\n                'Banking and Finance': false,\n                'Capital Markets': false,\n                'Constructions Law': false,\n                'Corporate Compliance': false,\n                'Criminal Defense': false,\n                'Entertainment Law': false,\n                'Insurance Law': false,\n                'Intellectual Property': false,\n                'International Arbitration': false,\n                'International Business': false,\n                'Labor and Employment': false,\n                'Litigation': false,\n                'Private Equity and Funds': false,\n                'Real Estate': false,\n                'Technology': false,\n                'Venture Capital Law': false\n            },\n            'Result Source':  {\n                'sumline.jp': false,\n                'HG.org': false,\n                'bengoshikai.jp': false,\n                'legal.coconala.com': false\n            }\n        }\n        this.setState({checkFieldsState: cleared}, ()=> {\n            console.log('cleared this.state.checkfieldsState: ', this.state.checkFieldsState)\n        })\n        \n        this.props.onFilterApply({})\n    }\n\n    handleCheck(type, field) {\n        let checkFieldsStateTemp = this.state.checkFieldsState;\n        console.log('handling check: ', type, ' : ', field)\n        console.log('current state- ', `${type}[${field}]`, \": \", this.state.checkFieldsState[type][field])\n        // this.setState({[`checkFieldsState[${type}][${field}]`]: !this.state.checkFieldsState[type][field]})\n        // this.setState({checkFieldsState: {[type]: {[field]: !this.state.checkFieldsState[type][field]}}}, ()=>{\n        //     console.log('after state- ',`${type}[${field}]`, \": \", this.state.checkFieldsState[type][field])\n        // })\n        // this.setState({[`checkFieldsState.${type}.${field}`]: true}, ()=>{\n        //     console.log('after state- ',`${type}[${field}]`, \": \", this.state.checkFieldsState[type][field])\n        // })\n        console.log('temp checkfield; ', checkFieldsStateTemp)\n        Object.entries(this.state.checkFieldsState).forEach(fieldType => {\n            if (fieldType[0] === type) {\n                Object.entries(fieldType[1]).forEach(fieldEntry => {\n                    if (fieldEntry[0] === field) {\n                        console.log('!!!!!!!!!!!!!match at', type, field)\n                        console.log('switching fieldEntry stat from', fieldEntry)\n                        checkFieldsStateTemp[type][field] = !fieldEntry[1]\n                        console.log('switching fieldEntry stat to', checkFieldsStateTemp[type][field])\n                    }\n                })\n            }\n        })\n        this.setState({checkFieldsState: checkFieldsStateTemp})\n        this.setState({test3: 'wahs'}, ()=>{\n            console.log('state: ', this.state);\n        })\n\n    }\n    render () {\n        console.log('rendering')\n        // let checkFields = this.state.checkFieldsState;\n        // let checkFields = {\n        //     'Non-Japanese Friendliness': {\n        //         'Community reviewed': false,\n        //         'Has website' : false,\n        //         'Multi-lingual': false,\n        //         'More than 50 upvotes': false,\n        //         'Offers free consultation': false,\n        //         'Translator available': false,\n        //         'Online consultation available': false\n        //     },\n        //     'Legal Service / Type': {\n        //         'Attorney': false,\n        //         'Judicial Scrivener' : false,\n        //         'Patent Agent': false,\n        //         'Administrative Scrivener': false\n        //     },\n        //     'Practice Areas': {\n        //         'Arbitration and Mediation': false,\n        //         'Asset Finance Law': false,\n        //         'Banking and Finance': false,\n        //         'Capital Markets': false,\n        //         'Constructions Law': false,\n        //         'Corporate Compliance': false,\n        //         'Criminal Defense': false,\n        //         'Entertainment Law': false,\n        //         'Insurance Law': false,\n        //         'Intellectual Property': false,\n        //         'International Arbitration': false,\n        //         'International Business': false,\n        //         'Labor and Employment': false,\n        //         'Litigation': false,\n        //         'Private Equity and Funds': false,\n        //         'Real Estate': false,\n        //         'Technology': false,\n        //         'Venture Capital Law': false\n        //     },\n        //     'Result Source':  {\n        //         'sumline.jp': false,\n        //         'HG.org': false,\n        //         'bengoshikai.jp': false,\n        //         'legal.coconala.com': false\n        //     }\n        // }\n\n        return (\n            <div className=\"detail-form\">\n                <div className=\"form-action-buttons\">\n                    <button onClick={() => {this.handleSubmit(this.state.checkFieldsState)}} className=\"primary\">Apply Filter</button>\n                    <button onClick={this.handleReset} className=\"secondary\">Reset Filter</button>\n                </div>\n                <div className=\"checkbox-area\">\n                    {/* {Object.entries(checkFields).map(item => { */}\n                    {Object.entries(this.state.checkFieldsState).map(item => {\n                        // console.log('item: ', item);\n                        return (\n                        <div className=\"checkgroup\">\n                            <h4>{item[0]}</h4>\n                            <ul className=\"checklist\">\n                                {Object.entries(item[1]).map(checkfield => {\n                                   return  (\n                                    <div>\n                                        {/* <input type=\"checkbox\" name={checkfield[0]} value={checkfield[0]} defaultChecked={checkfield[1]}/> */}\n                                        <input type=\"checkbox\" onChange={() => this.handleCheck(item[0], checkfield[0])} name={checkfield[0]} value={checkfield[0]} checked={checkfield[1]}/>\n                                        <label>{checkfield[0]}</label>\n                                    </div>\n                                    )\n                                })}\n                            </ul>\n                        </div>\n                        )\n                    })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default FilterForm","/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/expertsDirectory/expertsDirectory.js",["69"],"/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/expertDetail/expertDetail.js",["70","71","72","73","74","75","76","77","78","79","80","81"],"/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/App.js",["82","83","84","85","86","87"],"/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/homeContent/homeContent.js",["88","89","90","91","92","93","94","95","96","97","98","99","100"],"/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/routes/Route.js",[],"/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/reportWebVitals.js",[],"/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/utilities/history.js",[],"/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/index.js",[],"/Users/maho/Documents/UI:UX course/final project/minnannotation/minnannotator/src/utilities/dashboard.js",[],{"ruleId":"101","severity":1,"message":"102","line":11,"column":7,"nodeType":"103","messageId":"104","endLine":11,"endColumn":22},{"ruleId":"105","severity":1,"message":"106","line":41,"column":20,"nodeType":"107","messageId":"108","endLine":41,"endColumn":22},{"ruleId":"105","severity":1,"message":"106","line":44,"column":27,"nodeType":"107","messageId":"108","endLine":44,"endColumn":29},{"ruleId":"109","severity":1,"message":"110","line":53,"column":29,"nodeType":"111","messageId":"112","endLine":75,"endColumn":30},{"ruleId":"109","severity":1,"message":"110","line":129,"column":29,"nodeType":"111","messageId":"112","endLine":151,"endColumn":30},{"ruleId":"113","severity":1,"message":"114","line":272,"column":68,"nodeType":"115","endLine":272,"endColumn":71},{"ruleId":"116","severity":1,"message":"117","line":293,"column":65,"nodeType":"115","endLine":293,"endColumn":264},{"ruleId":"116","severity":1,"message":"117","line":328,"column":69,"nodeType":"115","endLine":328,"endColumn":271},{"ruleId":"116","severity":1,"message":"117","line":358,"column":69,"nodeType":"115","endLine":358,"endColumn":259},{"ruleId":"116","severity":1,"message":"117","line":376,"column":219,"nodeType":"115","endLine":376,"endColumn":309},{"ruleId":"116","severity":1,"message":"117","line":401,"column":61,"nodeType":"115","endLine":401,"endColumn":264},{"ruleId":"101","severity":1,"message":"118","line":22,"column":15,"nodeType":"103","messageId":"104","endLine":22,"endColumn":23},{"ruleId":"101","severity":1,"message":"119","line":3,"column":8,"nodeType":"103","messageId":"104","endLine":3,"endColumn":9},{"ruleId":"105","severity":1,"message":"106","line":22,"column":20,"nodeType":"107","messageId":"108","endLine":22,"endColumn":22},{"ruleId":"120","severity":1,"message":"121","line":81,"column":21,"nodeType":"122","endLine":81,"endColumn":31},{"ruleId":"120","severity":1,"message":"121","line":82,"column":21,"nodeType":"122","endLine":82,"endColumn":31},{"ruleId":"120","severity":1,"message":"121","line":84,"column":21,"nodeType":"122","endLine":84,"endColumn":31},{"ruleId":"120","severity":1,"message":"121","line":85,"column":21,"nodeType":"122","endLine":85,"endColumn":31},{"ruleId":"116","severity":1,"message":"117","line":158,"column":53,"nodeType":"115","endLine":158,"endColumn":196},{"ruleId":"116","severity":1,"message":"117","line":198,"column":57,"nodeType":"115","endLine":198,"endColumn":200},{"ruleId":"116","severity":1,"message":"117","line":229,"column":61,"nodeType":"115","endLine":229,"endColumn":205},{"ruleId":"116","severity":1,"message":"117","line":255,"column":61,"nodeType":"115","endLine":255,"endColumn":201},{"ruleId":"116","severity":1,"message":"117","line":273,"column":277,"nodeType":"115","endLine":273,"endColumn":398},{"ruleId":"116","severity":1,"message":"117","line":324,"column":29,"nodeType":"115","endLine":324,"endColumn":184},{"ruleId":"116","severity":1,"message":"117","line":335,"column":79,"nodeType":"115","endLine":335,"endColumn":108},{"ruleId":"116","severity":1,"message":"117","line":345,"column":45,"nodeType":"115","endLine":345,"endColumn":165},{"ruleId":"101","severity":1,"message":"123","line":3,"column":10,"nodeType":"103","messageId":"104","endLine":3,"endColumn":16},{"ruleId":"101","severity":1,"message":"124","line":4,"column":8,"nodeType":"103","messageId":"104","endLine":4,"endColumn":15},{"ruleId":"116","severity":1,"message":"117","line":25,"column":36,"nodeType":"115","endLine":25,"endColumn":59},{"ruleId":"105","severity":1,"message":"106","line":29,"column":52,"nodeType":"107","messageId":"108","endLine":29,"endColumn":54},{"ruleId":"113","severity":1,"message":"114","line":30,"column":13,"nodeType":"115","endLine":30,"endColumn":38},{"ruleId":"113","severity":1,"message":"114","line":31,"column":13,"nodeType":"115","endLine":31,"endColumn":38},{"ruleId":"113","severity":1,"message":"125","line":86,"column":25,"nodeType":"115","endLine":86,"endColumn":36},{"ruleId":"116","severity":1,"message":"117","line":89,"column":25,"nodeType":"115","endLine":89,"endColumn":48},{"ruleId":"116","severity":1,"message":"117","line":123,"column":29,"nodeType":"115","endLine":123,"endColumn":55},{"ruleId":"105","severity":1,"message":"106","line":137,"column":48,"nodeType":"107","messageId":"108","endLine":137,"endColumn":50},{"ruleId":"116","severity":1,"message":"117","line":137,"column":55,"nodeType":"115","endLine":137,"endColumn":87},{"ruleId":"105","severity":1,"message":"106","line":137,"column":96,"nodeType":"107","messageId":"108","endLine":137,"endColumn":98},{"ruleId":"116","severity":1,"message":"117","line":137,"column":102,"nodeType":"115","endLine":137,"endColumn":134},{"ruleId":"116","severity":1,"message":"117","line":137,"column":137,"nodeType":"115","endLine":137,"endColumn":169},{"ruleId":"113","severity":1,"message":"125","line":157,"column":25,"nodeType":"115","endLine":157,"endColumn":59},{"ruleId":"113","severity":1,"message":"125","line":190,"column":25,"nodeType":"115","endLine":190,"endColumn":37},{"ruleId":"116","severity":1,"message":"117","line":196,"column":33,"nodeType":"115","endLine":196,"endColumn":63},{"ruleId":"113","severity":1,"message":"125","line":219,"column":25,"nodeType":"115","endLine":219,"endColumn":37},{"ruleId":"113","severity":1,"message":"125","line":255,"column":25,"nodeType":"115","endLine":255,"endColumn":59},"no-unused-vars","'expertsData_old' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'japanMap' is assigned a value but never used.","'_' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'Router' is defined but never used.","'history' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md"]